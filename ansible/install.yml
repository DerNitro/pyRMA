---
- name: Set variables install pyRMA
  ansible.builtin.set_fact:
    app_user:           "{{ app_user | default('acs') }}"
    app_user_password:  "{{ app_user_password | default('admin') }}"
    app_group:          "{{ app_group | default('acs') }}"
    app_folder:         "{{ app_folder | default('/opt/pyRMA') }}"
    app_data_dir:       "{{ app_data_dir | default('/data/pyRMA') }}"
    app_log_level:      "{{ app_log_level | default('DEBUG') }}"
    app_web_ip:         "{{ app_web_ip | default('0.0.0.0') }}"
    app_web_port:       "{{ app_web_port | default('8080') }}"
    email_domain_name:  "{{ email_domain_name | default('localhost') }}"

- name: Install multi python packages with version specifiers
  become: true
  pip:
    name:
      - flask==2.1.2
      - npyscreen==4.10.5
      - flask_wtf==1.0.1
      - sqlalchemy==1.4.36
      - wtforms==3.0.1
      - psutil==5.9.0
      - email_validator==1.2.1
      - python-pam==2.0.2

- name: Create local group {{ app_group }}
  become: true
  ansible.builtin.group:
    name: "{{ app_group }}"
    state: present
    system: true

- name: Add local user {{ app_user }}
  become: true
  ansible.builtin.user:
    name: "{{ app_user }}"
    system: true
    group: "{{ app_group }}"
    comment: "ACS Administrator"
    groups:
      - shadow    # для проверки локальных пользователей.
    append: yes
    password: "{{ app_user_password | password_hash('sha512', 'mysecretsalt') }}"
    shell: "/opt/pyRMA/bin/pyrma.sh"

- name: Create APP folders
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0775'
  with_items: 
    - "{{ app_folder }}"
    - "{{ app_folder }}/bin"

- name: Copy bin files
  become: true
  ansible.builtin.copy:
    src: "bin/{{ item }}"
    dest: "{{ app_folder }}/bin/{{ item }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
  with_items: 
    - pyrma.py
    - ttyplay
    - ttyrec
    - ttytime
    - web.py
  notify: Restart pyrma-web.service

- name: Copy data files
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ app_folder }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  with_items: 
    - web
    - lib
  notify: Restart pyrma-web.service

- name: Create link pyRMA lib
  become: true
  ansible.builtin.file:
    dest: /usr/lib/python3.8/pyrmalib
    src: "{{ app_folder }}/lib/pyrmalib"
    state: link

- name: Copy bin/pyrma.sh
  become: true
  ansible.builtin.template:
    src: bin/pyrma.sh.j2
    dest: "{{ app_folder }}/bin/pyrma.sh"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'

- name: Create pyRMA SCHEME
  become: true
  become_user: "{{ app_user }}"
  ansible.builtin.command:
    argv:
      - /usr/bin/python3
      - "{{ app_folder }}/lib/pyrmalib/schema.py"
      - "--user"
      - "{{ pyrma_database.username }}"
      - "--password"
      - "{{ pyrma_database.password }}"
      - "--db"
      - "{{ pyrma_database.name }}"
      - "--host"
      - "{{ pyrma_database.host }}"
      - "--port"
      - "{{ pyrma_database.port }}"
      - install
  register: _create_scheme
  failed_when: _create_scheme.rc != 0 and _create_scheme.rc != 99
  changed_when: _create_scheme.rc == 0

- name: Add pyrma.sh to /etc/shells
  become: true
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: "{{ app_folder }}/bin/pyrma.sh"

- name: Change owner and group pyRMA folders
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '6775'
  with_items: 
    - "{{ app_data_dir }}"
    - /var/log/pyRMA/
    - /home/acs
    - /etc/pyrma
    
- name: Configure pyRMA
  become: true
  ansible.builtin.template:
    src: etc/pyrma/pyrma.conf.j2
    dest: /etc/pyrma/pyrma.conf
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0640'
  notify: Restart pyrma-web.service
  
- name: Add pyRMA Web service
  become: true
  ansible.builtin.template:
    src: "etc/systemd/system/pyrma-web.service.j2"
    dest: /etc/systemd/system/pyrma-web.service
    owner: root
    group: root
    mode: '0644'
  notify: Restart pyrma-web.service

- name: Flush handlers
  meta: flush_handlers

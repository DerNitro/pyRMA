---
- name: Set variables install pyRMA
  ansible.builtin.set_fact:
    app_user:       "{{ app_user | default('pyrma') }}"
    app_group:      "{{ app_group | default('pyrma') }}"
    app_folder:     "{{ app_folder | default('/opt/pyRMA') }}"
    app_data_dir:   "{{ app_data_dir | default('/data/pyRMA') }}"
    app_log_level:  "{{ app_log_level | default('DEBUG') }}"
    app_web_ip:     "{{ app_web_ip | default('0.0.0.0') }}"
    app_web_port:   "{{ app_web_port | default('8080') }}"

- name: Install multi python packages with version specifiers
  become: true
  pip:
    name:
      - flask==2.1.2
      - npyscreen==4.10.5
      - flask_wtf==1.0.1
      - sqlalchemy==1.4.36
      - wtforms==3.0.1
      - psutil==5.9.0
      - email_validator==1.2.1

- name: Create local group {{ app_group }}
  become: true
  ansible.builtin.group:
    name: "{{ app_group }}"
    state: present
    system: true

- name: Add local user {{ app_user }}
  become: true
  ansible.builtin.user:
    name: "{{ app_user }}"
    system: true
    group: "{{ app_group }}"
    shell: "/usr/bin/false"

- name: Create APP folders
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0775'
  with_items: 
    - "{{ app_folder }}"
    - "{{ app_folder }}/bin"

- name: Copy bin files
  become: true
  ansible.builtin.copy:
    src: "bin/{{ item }}"
    dest: "{{ app_folder }}/bin/{{ item }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
  with_items: 
    - pyrma.py
    - ttyplay
    - ttyrec
    - ttytime
    - web.py

- name: Copy data files
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ app_folder }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  with_items: 
    - web
    - lib

- name: Create link pyRMA lib
  become: true
  ansible.builtin.file:
    dest: /usr/lib/python3.8/pyrmalib
    src: "{{ app_folder }}/lib/pyrmalib"
    state: link

- name: Copy bin/pyrma.sh
  become: true
  ansible.builtin.template:
    src: bin/pyrma.sh.j2
    dest: "{{ app_folder }}/bin/pyrma.sh"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'

- name: Create pyRMA SCHEME
  become: true
  become_user: "{{ app_user }}"
  ansible.builtin.command:
    argv:
      - /usr/bin/python3
      - "{{ app_folder }}/lib/pyrmalib/schema.py"
      - "--user"
      - "{{ pyrma_database.username }}"
      - "--password"
      - "{{ pyrma_database.password }}"
      - "--db"
      - "{{ pyrma_database.name }}"
      - "--host"
      - "{{ pyrma_database.host }}"
      - "--port"
      - "{{ pyrma_database.port }}"
      - install
  register: _create_scheme
  failed_when: _create_scheme.rc != 0 and _create_scheme.rc != 99
  changed_when: _create_scheme.rc == 0

- name: Add pyrma.sh to /etc/shells
  become: true
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: "{{ app_folder }}/bin/pyrma.sh"

- name: Install libnss-pgsql2 pam-pgsql
  become: true
  apt:
    name: 
      - libnss-pgsql2
      - libpam-pgsql
    update_cache: yes
    cache_valid_time: 3600

- name: Configure libnss-pgsql2 and libpam-pgsql
  become: true
  ansible.builtin.template:
    src: "etc/{{ item }}.j2"
    dest: /etc/{{ item }}
    owner: root
    group: root
    mode: '0644'
  with_items: 
    - nss-pgsql-root.conf
    - nss-pgsql.conf
    - pam_pgsql.conf

- name: Configure nsswitch.conf
  become: true
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    line: '\1 pgsql'
    regexp: "^({{ item }})$"
    backup: yes
    backrefs: yes
  with_items: 
    - "passwd:         files systemd"
    - "group:          files systemd"
    - "shadow:         files"

- name: Copy PAM.D modules
  become: true
  ansible.builtin.copy:
    src: "etc/pam.d/{{ item }}"
    dest: /etc/pam.d/{{ item }}
    owner: root
    group: root
    mode: '0644'
  with_items: 
    - psql-account
    - psql-auth
    - psql-password

- name: Add pam module psql-auth to sshd service
  become: true
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    line: '@include psql-auth'
    insertbefore: "@include common-auth"
    backup: yes
  
- name: Add pam module psql-account to sshd service
  become: true
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    line: '@include psql-account'
    insertbefore: "@include common-account"

- name: Add pam module psql-password to sshd service
  become: true
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    line: '@include psql-password'
    insertbefore: "@include common-password"

- name: Change owner and group pyRMA folders
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: admin
    group: acs
    mode: '6775'
  with_items: 
    - "{{ app_data_dir }}"
    - /var/log/pyRMA/
    - /home/acs
    - /etc/pyrma
    
- name: Configure pyRMA
  become: true
  ansible.builtin.template:
    src: etc/pyrma/pyrma.conf.j2
    dest: /etc/pyrma/pyrma.conf
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0644'
  
- name: Copy file to /etc/security/limits.d/acs.conf
  become: true
  ansible.builtin.copy:
    src: "etc/security/limits.d/acs.conf"
    dest: /etc/security/limits.d/acs.conf
    owner: root
    group: root
    mode: '0644'
